{"mappings":"AAAA,EAAE,UAAU,KAAK,CAAC;IAChB,wCAAwC;IACxC,wDAAwD;IAExD,sBAAsB;IACtB,MAAM,wBAAwB;QAC5B,MAAM,QAAQ,SAAS,gBAAgB,CAAC;QACxC,IAAI,MAAM,MAAM,GAAG,GAAG;YACpB,IAAI,UAAU;YACd,YAAY;gBACV,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC;gBAC7B,IAAI,OAAO,AAAC,CAAA,UAAU,CAAA,IAAK,MAAM,MAAM;gBACvC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;gBAC7B,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC;gBAC1B,UAAU;YACZ,GAAG;QACL;IACF;IAEA,4BAA4B;IAC5B;IAEA,kDAAkD;IAClD,EAAE,QAAQ,MAAM,CAAC;QACf,IAAI,EAAE,QAAQ,SAAS,KAAK,IAC1B,EAAE,WAAW,QAAQ,CAAC;aAEtB,EAAE,WAAW,WAAW,CAAC;IAE7B;IAEA,yDAAyD;IACzD,IAAI,eAAe;IACnB,MAAM,SAAS,EAAE;IACjB,MAAM,cAAc,OAAO,MAAM;IACjC,IAAI,eAAe;IACnB,IAAI,WAAW,cAAc;IAE7B,SAAS;QACP,MAAM,aAAa,CAAE,CAAA,eAAgB,CAAA,MAAM,YAAW,CAAC;QACvD,EAAE,mBAAmB,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,WAAW,EAAE,CAAC;IACpE;IAEA,EAAE,gBAAgB,KAAK,CAAC;QACtB,IAAI,eAAe,UAAU;YAC3B;YACA;QACF;IACF;IAEA,EAAE,gBAAgB,KAAK,CAAC;QACtB,IAAI,eAAe,GAAG;YACpB;YACA;QACF;IACF;IAEA,2BAA2B;IAC3B,YAAY;QACV,IAAI,eAAe,UACjB;aAEA,eAAe;QAEjB;IACF,GAAG;IAEH,4BAA4B;IAC5B,SAAS;QACP,IAAI,EAAE,QAAQ,KAAK,MAAM,KACvB,eAAe;aACV,IAAI,EAAE,QAAQ,KAAK,MAAM,KAC9B,eAAe;aAEf,eAAe;QAEjB,WAAW,cAAc;QACzB,eAAe,KAAK,GAAG,CAAC,cAAc;QACtC;IACF;IAEA,EAAE,QAAQ,MAAM,CAAC;IACjB;IAEA,2EAA2E;IAC3E,MAAM,kBAAkB;QACtB,EAAE,sBAAsB,IAAI,CAAC;YAC3B,MAAM,aAAa,EAAE,IAAI,EAAE,MAAM,GAAG,GAAG;YACvC,MAAM,gBAAgB,aAAa,EAAE,IAAI,EAAE,WAAW;YACtD,MAAM,cAAc,EAAE,QAAQ,SAAS;YACvC,MAAM,iBAAiB,cAAc,EAAE,QAAQ,MAAM;YAErD,IAAI,gBAAgB,eAAe,aAAa,iBAAiB,KAC/D,EAAE,IAAI,EAAE,QAAQ,CAAC;QAErB;IACF;IAEA,EAAE,QAAQ,MAAM,CAAC;IACjB,mBAAmB,gBAAgB;IAEnC,oBAAoB;IACpB,EAAE,QAAQ,EAAE,CAAC,QAAQ;QACnB,EAAE,QAAQ,QAAQ,CAAC;IACrB;IAEA,kCAAkC;IAClC,EAAE,iBAAiB,EAAE,CAAC,SAAS;QAC7B,IAAI,EAAE,QAAQ,KAAK,KAAK,KACtB,EAAE,oBAAoB,QAAQ,CAAC;IAEnC;AACF","sources":["src/script.js"],"sourcesContent":["$(document).ready(() => {\r\n  // ===== ESSENTIAL JAVASCRIPT ONLY =====\r\n  // (Everything else moved to CSS for better performance)\r\n\r\n  // Hero animated words\r\n  const initHeroWordAnimation = () => {\r\n    const words = document.querySelectorAll(\".hero-words-wrapper .hero-word\");\r\n    if (words.length > 0) {\r\n      let current = 0;\r\n      setInterval(() => {\r\n        words[current].classList.remove(\"hero-word-in\");\r\n        words[current].classList.add(\"hero-word-out\");\r\n        let next = (current + 1) % words.length;\r\n        words[next].classList.remove(\"hero-word-out\");\r\n        words[next].classList.add(\"hero-word-in\");\r\n        current = next;\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  // Initialize hero animation\r\n  initHeroWordAnimation();\r\n\r\n  // Navbar background change on scroll (simplified)\r\n  $(window).scroll(() => {\r\n    if ($(window).scrollTop() > 50) {\r\n      $(\".navbar\").addClass(\"navbar-scrolled\");\r\n    } else {\r\n      $(\".navbar\").removeClass(\"navbar-scrolled\");\r\n    }\r\n  });\r\n\r\n  // Gallery Slider (requires JavaScript for complex logic)\r\n  let currentSlide = 0;\r\n  const slides = $(\".gallery-slide\");\r\n  const totalSlides = slides.length;\r\n  let slidesToShow = 3;\r\n  let maxSlide = totalSlides - slidesToShow;\r\n\r\n  function updateSlider() {\r\n    const translateX = -(currentSlide * (100 / slidesToShow));\r\n    $(\".gallery-slider\").css(\"transform\", `translateX(${translateX}%)`);\r\n  }\r\n\r\n  $(\"#galleryNext\").click(() => {\r\n    if (currentSlide < maxSlide) {\r\n      currentSlide++;\r\n      updateSlider();\r\n    }\r\n  });\r\n\r\n  $(\"#galleryPrev\").click(() => {\r\n    if (currentSlide > 0) {\r\n      currentSlide--;\r\n      updateSlider();\r\n    }\r\n  });\r\n\r\n  // Auto-play gallery slider\r\n  setInterval(() => {\r\n    if (currentSlide < maxSlide) {\r\n      currentSlide++;\r\n    } else {\r\n      currentSlide = 0;\r\n    }\r\n    updateSlider();\r\n  }, 5000);\r\n\r\n  // Responsive gallery slider\r\n  function updateSlidesToShow() {\r\n    if ($(window).width() <= 768) {\r\n      slidesToShow = 1;\r\n    } else if ($(window).width() <= 992) {\r\n      slidesToShow = 2;\r\n    } else {\r\n      slidesToShow = 3;\r\n    }\r\n    maxSlide = totalSlides - slidesToShow;\r\n    currentSlide = Math.min(currentSlide, maxSlide);\r\n    updateSlider();\r\n  }\r\n\r\n  $(window).resize(updateSlidesToShow);\r\n  updateSlidesToShow();\r\n\r\n  // Scroll animations trigger (lightweight IntersectionObserver alternative)\r\n  const animateElements = () => {\r\n    $(\".animate-on-scroll\").each(function () {\r\n      const elementTop = $(this).offset().top;\r\n      const elementBottom = elementTop + $(this).outerHeight();\r\n      const viewportTop = $(window).scrollTop();\r\n      const viewportBottom = viewportTop + $(window).height();\r\n\r\n      if (elementBottom > viewportTop && elementTop < viewportBottom - 100) {\r\n        $(this).addClass(\"animate\");\r\n      }\r\n    });\r\n  };\r\n\r\n  $(window).scroll(animateElements);\r\n  animateElements(); // Initial check\r\n\r\n  // Body loaded state\r\n  $(window).on(\"load\", () => {\r\n    $(\"body\").addClass(\"loaded\");\r\n  });\r\n\r\n  // Mobile menu close on link click\r\n  $(\".navbar-nav a\").on(\"click\", () => {\r\n    if ($(window).width() < 992) {\r\n      $(\".navbar-collapse\").collapse(\"hide\");\r\n    }\r\n  });\r\n});\r\n"],"names":[],"version":3,"file":"co-working space.44983732.js.map","sourceRoot":"/__parcel_source_root/"}